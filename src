{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "654f8247",
   "metadata": {},
   "source": [
    "# Project Proposal 606 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "411d635a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: termcolor in c:\\users\\vasavi\\anaconda3\\lib\\site-packages (2.3.0)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install termcolor\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "4529b263",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: xgboost in c:\\users\\vasavi\\anaconda3\\lib\\site-packages (1.7.5)\n",
      "Requirement already satisfied: numpy in c:\\users\\vasavi\\anaconda3\\lib\\site-packages (from xgboost) (1.21.5)\n",
      "Requirement already satisfied: scipy in c:\\users\\vasavi\\anaconda3\\lib\\site-packages (from xgboost) (1.7.3)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install xgboost"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "628cf734",
   "metadata": {},
   "source": [
    "### Implorting the libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "8721f5e8",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd      \n",
    "import numpy as np       \n",
    "import matplotlib.pyplot as plt    \n",
    "import matplotlib.dates as mdates   \n",
    "import seaborn as sns  \n",
    "import sklearn           \n",
    "import statsmodels.api as sm      \n",
    "import scipy.stats as stats       \n",
    "import random\n",
    "%matplotlib inline\n",
    "import matplotlib as mpl\n",
    "import matplotlib.pyplot as plt\n",
    "mpl.rc('axes', labelsize=14)\n",
    "mpl.rc('xtick', labelsize=12)\n",
    "mpl.rc('ytick', labelsize=12)\n",
    "from termcolor import colored\n",
    "import pylab\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1b7065fd",
   "metadata": {},
   "source": [
    "### Setting the file path and name"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "40eb1980",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "train_df=pd.read_csv(r\"C:\\Users\\vasavi\\Downloads\\bike_train.csv\")\n",
    "\n",
    "test_df=pd.read_csv(r\"C:\\Users\\vasavi\\Downloads\\bike_test.csv\")\n",
    "\n",
    "\n",
    "# Copy of datasets\n",
    "train = train_df\n",
    "test = test_df\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "e593448a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>datetime</th>\n",
       "      <th>season</th>\n",
       "      <th>holiday</th>\n",
       "      <th>workingday</th>\n",
       "      <th>weather</th>\n",
       "      <th>temp</th>\n",
       "      <th>atemp</th>\n",
       "      <th>humidity</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>casual</th>\n",
       "      <th>registered</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2011-01-01 00:00:00</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>9.84</td>\n",
       "      <td>14.395</td>\n",
       "      <td>81</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>13</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2011-01-01 01:00:00</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>9.02</td>\n",
       "      <td>13.635</td>\n",
       "      <td>80</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8</td>\n",
       "      <td>32</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2011-01-01 02:00:00</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>9.02</td>\n",
       "      <td>13.635</td>\n",
       "      <td>80</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5</td>\n",
       "      <td>27</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2011-01-01 03:00:00</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>9.84</td>\n",
       "      <td>14.395</td>\n",
       "      <td>75</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2011-01-01 04:00:00</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>9.84</td>\n",
       "      <td>14.395</td>\n",
       "      <td>75</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              datetime  season  holiday  workingday  weather  temp   atemp  \\\n",
       "0  2011-01-01 00:00:00       1        0           0        1  9.84  14.395   \n",
       "1  2011-01-01 01:00:00       1        0           0        1  9.02  13.635   \n",
       "2  2011-01-01 02:00:00       1        0           0        1  9.02  13.635   \n",
       "3  2011-01-01 03:00:00       1        0           0        1  9.84  14.395   \n",
       "4  2011-01-01 04:00:00       1        0           0        1  9.84  14.395   \n",
       "\n",
       "   humidity  windspeed  casual  registered  count  \n",
       "0        81        0.0       3          13     16  \n",
       "1        80        0.0       8          32     40  \n",
       "2        80        0.0       5          27     32  \n",
       "3        75        0.0       3          10     13  \n",
       "4        75        0.0       0           1      1  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "3dfc6721",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>datetime</th>\n",
       "      <th>season</th>\n",
       "      <th>holiday</th>\n",
       "      <th>workingday</th>\n",
       "      <th>weather</th>\n",
       "      <th>temp</th>\n",
       "      <th>atemp</th>\n",
       "      <th>humidity</th>\n",
       "      <th>windspeed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2011-01-20 00:00:00</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>10.66</td>\n",
       "      <td>11.365</td>\n",
       "      <td>56</td>\n",
       "      <td>26.0027</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2011-01-20 01:00:00</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>10.66</td>\n",
       "      <td>13.635</td>\n",
       "      <td>56</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2011-01-20 02:00:00</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>10.66</td>\n",
       "      <td>13.635</td>\n",
       "      <td>56</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2011-01-20 03:00:00</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>10.66</td>\n",
       "      <td>12.880</td>\n",
       "      <td>56</td>\n",
       "      <td>11.0014</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2011-01-20 04:00:00</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>10.66</td>\n",
       "      <td>12.880</td>\n",
       "      <td>56</td>\n",
       "      <td>11.0014</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              datetime  season  holiday  workingday  weather   temp   atemp  \\\n",
       "0  2011-01-20 00:00:00       1        0           1        1  10.66  11.365   \n",
       "1  2011-01-20 01:00:00       1        0           1        1  10.66  13.635   \n",
       "2  2011-01-20 02:00:00       1        0           1        1  10.66  13.635   \n",
       "3  2011-01-20 03:00:00       1        0           1        1  10.66  12.880   \n",
       "4  2011-01-20 04:00:00       1        0           1        1  10.66  12.880   \n",
       "\n",
       "   humidity  windspeed  \n",
       "0        56    26.0027  \n",
       "1        56     0.0000  \n",
       "2        56     0.0000  \n",
       "3        56    11.0014  \n",
       "4        56    11.0014  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dbf8078b",
   "metadata": {},
   "source": [
    "#### Function to print main info about the dataset in one line"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "af17baf3",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "def ds_info(df):\n",
    "    print(colored('SIZE' , 'blue', attrs=['bold', 'dark']))\n",
    "    print(df.size)\n",
    "    print(colored('\\nSHAPE' , 'blue', attrs=['bold', 'dark']))\n",
    "    print(df.shape)\n",
    "    print(colored('\\nINFO' , 'blue', attrs=['bold', 'dark']))\n",
    "    print(df.info())\n",
    "    print(colored('\\nNULL VALUES' , 'blue', attrs=['bold', 'dark']))\n",
    "    print(df.isnull().sum())\n",
    "    print(colored('\\nHEAD' , 'blue', attrs=['bold', 'dark']))\n",
    "    print(df.head())\n",
    "    print(colored('\\nTAIL' , 'blue', attrs=['bold', 'dark']))\n",
    "    print(df.tail())\n",
    "    print(colored('\\nDESCRIBE - Numerical' , 'blue', attrs=['bold', 'dark']))\n",
    "    print(df.describe())\n",
    "    print(colored('\\nDESCRIBE - Categorical' , 'blue', attrs=['bold', 'dark']))\n",
    "    print(df.describe(include='object'))\n",
    "    \n",
    "    print(colored('\\nUNIQUE ENTRIES IN EACH NUMERICAL COLUMN' , 'blue', attrs=['bold', 'dark']))\n",
    "    # Get number of unique entries in each column with numerical data\n",
    "    num_cols = [col for col in df.columns if df[col].dtype != \"object\"]\n",
    "    num_nunique = list(map(lambda col: df[col].nunique(), num_cols))    \n",
    "    dn = dict(zip(num_cols, num_nunique))\n",
    "    # Print number of unique entries by column, in ascending order\n",
    "    print(sorted(dn.items(), key=lambda x: x[1]))\n",
    "    \n",
    "    print(colored('\\nUNIQUE ENTRIES IN EACH CATEGORICAL COLUMN' , 'blue', attrs=['bold', 'dark']))\n",
    "    # Get number of unique entries in each column with categorical data\n",
    "    object_cols = [col for col in df.columns if df[col].dtype == \"object\"]\n",
    "    object_nunique = list(map(lambda col: df[col].nunique(), object_cols))\n",
    "    dc = dict(zip(object_cols, object_nunique))\n",
    "    # Print number of unique entries by column, in ascending order\n",
    "    print(sorted(dc.items(), key=lambda x: x[1]))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "367928c1",
   "metadata": {},
   "source": [
    "#### ds_info  prints various information about the dataset\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "a3986132",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "SIZE\n",
      "130632\n",
      "\n",
      "SHAPE\n",
      "(10886, 12)\n",
      "\n",
      "INFO\n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 10886 entries, 0 to 10885\n",
      "Data columns (total 12 columns):\n",
      " #   Column      Non-Null Count  Dtype  \n",
      "---  ------      --------------  -----  \n",
      " 0   datetime    10886 non-null  object \n",
      " 1   season      10886 non-null  int64  \n",
      " 2   holiday     10886 non-null  int64  \n",
      " 3   workingday  10886 non-null  int64  \n",
      " 4   weather     10886 non-null  int64  \n",
      " 5   temp        10886 non-null  float64\n",
      " 6   atemp       10886 non-null  float64\n",
      " 7   humidity    10886 non-null  int64  \n",
      " 8   windspeed   10886 non-null  float64\n",
      " 9   casual      10886 non-null  int64  \n",
      " 10  registered  10886 non-null  int64  \n",
      " 11  count       10886 non-null  int64  \n",
      "dtypes: float64(3), int64(8), object(1)\n",
      "memory usage: 1020.7+ KB\n",
      "None\n",
      "\n",
      "NULL VALUES\n",
      "datetime      0\n",
      "season        0\n",
      "holiday       0\n",
      "workingday    0\n",
      "weather       0\n",
      "temp          0\n",
      "atemp         0\n",
      "humidity      0\n",
      "windspeed     0\n",
      "casual        0\n",
      "registered    0\n",
      "count         0\n",
      "dtype: int64\n",
      "\n",
      "HEAD\n",
      "              datetime  season  holiday  workingday  weather  temp   atemp  \\\n",
      "0  2011-01-01 00:00:00       1        0           0        1  9.84  14.395   \n",
      "1  2011-01-01 01:00:00       1        0           0        1  9.02  13.635   \n",
      "2  2011-01-01 02:00:00       1        0           0        1  9.02  13.635   \n",
      "3  2011-01-01 03:00:00       1        0           0        1  9.84  14.395   \n",
      "4  2011-01-01 04:00:00       1        0           0        1  9.84  14.395   \n",
      "\n",
      "   humidity  windspeed  casual  registered  count  \n",
      "0        81        0.0       3          13     16  \n",
      "1        80        0.0       8          32     40  \n",
      "2        80        0.0       5          27     32  \n",
      "3        75        0.0       3          10     13  \n",
      "4        75        0.0       0           1      1  \n",
      "\n",
      "TAIL\n",
      "                  datetime  season  holiday  workingday  weather   temp  \\\n",
      "10881  2012-12-19 19:00:00       4        0           1        1  15.58   \n",
      "10882  2012-12-19 20:00:00       4        0           1        1  14.76   \n",
      "10883  2012-12-19 21:00:00       4        0           1        1  13.94   \n",
      "10884  2012-12-19 22:00:00       4        0           1        1  13.94   \n",
      "10885  2012-12-19 23:00:00       4        0           1        1  13.12   \n",
      "\n",
      "        atemp  humidity  windspeed  casual  registered  count  \n",
      "10881  19.695        50    26.0027       7         329    336  \n",
      "10882  17.425        57    15.0013      10         231    241  \n",
      "10883  15.910        61    15.0013       4         164    168  \n",
      "10884  17.425        61     6.0032      12         117    129  \n",
      "10885  16.665        66     8.9981       4          84     88  \n",
      "\n",
      "DESCRIBE - Numerical\n",
      "             season       holiday    workingday       weather         temp  \\\n",
      "count  10886.000000  10886.000000  10886.000000  10886.000000  10886.00000   \n",
      "mean       2.506614      0.028569      0.680875      1.418427     20.23086   \n",
      "std        1.116174      0.166599      0.466159      0.633839      7.79159   \n",
      "min        1.000000      0.000000      0.000000      1.000000      0.82000   \n",
      "25%        2.000000      0.000000      0.000000      1.000000     13.94000   \n",
      "50%        3.000000      0.000000      1.000000      1.000000     20.50000   \n",
      "75%        4.000000      0.000000      1.000000      2.000000     26.24000   \n",
      "max        4.000000      1.000000      1.000000      4.000000     41.00000   \n",
      "\n",
      "              atemp      humidity     windspeed        casual    registered  \\\n",
      "count  10886.000000  10886.000000  10886.000000  10886.000000  10886.000000   \n",
      "mean      23.655084     61.886460     12.799395     36.021955    155.552177   \n",
      "std        8.474601     19.245033      8.164537     49.960477    151.039033   \n",
      "min        0.760000      0.000000      0.000000      0.000000      0.000000   \n",
      "25%       16.665000     47.000000      7.001500      4.000000     36.000000   \n",
      "50%       24.240000     62.000000     12.998000     17.000000    118.000000   \n",
      "75%       31.060000     77.000000     16.997900     49.000000    222.000000   \n",
      "max       45.455000    100.000000     56.996900    367.000000    886.000000   \n",
      "\n",
      "              count  \n",
      "count  10886.000000  \n",
      "mean     191.574132  \n",
      "std      181.144454  \n",
      "min        1.000000  \n",
      "25%       42.000000  \n",
      "50%      145.000000  \n",
      "75%      284.000000  \n",
      "max      977.000000  \n",
      "\n",
      "DESCRIBE - Categorical\n",
      "                   datetime\n",
      "count                 10886\n",
      "unique                10886\n",
      "top     2011-01-01 00:00:00\n",
      "freq                      1\n",
      "\n",
      "UNIQUE ENTRIES IN EACH NUMERICAL COLUMN\n",
      "[('holiday', 2), ('workingday', 2), ('season', 4), ('weather', 4), ('windspeed', 28), ('temp', 49), ('atemp', 60), ('humidity', 89), ('casual', 309), ('registered', 731), ('count', 822)]\n",
      "\n",
      "UNIQUE ENTRIES IN EACH CATEGORICAL COLUMN\n",
      "[('datetime', 10886)]\n"
     ]
    }
   ],
   "source": [
    "ds_info(train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "4b59ee5c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "SIZE\n",
      "58437\n",
      "\n",
      "SHAPE\n",
      "(6493, 9)\n",
      "\n",
      "INFO\n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 6493 entries, 0 to 6492\n",
      "Data columns (total 9 columns):\n",
      " #   Column      Non-Null Count  Dtype  \n",
      "---  ------      --------------  -----  \n",
      " 0   datetime    6493 non-null   object \n",
      " 1   season      6493 non-null   int64  \n",
      " 2   holiday     6493 non-null   int64  \n",
      " 3   workingday  6493 non-null   int64  \n",
      " 4   weather     6493 non-null   int64  \n",
      " 5   temp        6493 non-null   float64\n",
      " 6   atemp       6493 non-null   float64\n",
      " 7   humidity    6493 non-null   int64  \n",
      " 8   windspeed   6493 non-null   float64\n",
      "dtypes: float64(3), int64(5), object(1)\n",
      "memory usage: 456.7+ KB\n",
      "None\n",
      "\n",
      "NULL VALUES\n",
      "datetime      0\n",
      "season        0\n",
      "holiday       0\n",
      "workingday    0\n",
      "weather       0\n",
      "temp          0\n",
      "atemp         0\n",
      "humidity      0\n",
      "windspeed     0\n",
      "dtype: int64\n",
      "\n",
      "HEAD\n",
      "              datetime  season  holiday  workingday  weather   temp   atemp  \\\n",
      "0  2011-01-20 00:00:00       1        0           1        1  10.66  11.365   \n",
      "1  2011-01-20 01:00:00       1        0           1        1  10.66  13.635   \n",
      "2  2011-01-20 02:00:00       1        0           1        1  10.66  13.635   \n",
      "3  2011-01-20 03:00:00       1        0           1        1  10.66  12.880   \n",
      "4  2011-01-20 04:00:00       1        0           1        1  10.66  12.880   \n",
      "\n",
      "   humidity  windspeed  \n",
      "0        56    26.0027  \n",
      "1        56     0.0000  \n",
      "2        56     0.0000  \n",
      "3        56    11.0014  \n",
      "4        56    11.0014  \n",
      "\n",
      "TAIL\n",
      "                 datetime  season  holiday  workingday  weather   temp  \\\n",
      "6488  2012-12-31 19:00:00       1        0           1        2  10.66   \n",
      "6489  2012-12-31 20:00:00       1        0           1        2  10.66   \n",
      "6490  2012-12-31 21:00:00       1        0           1        1  10.66   \n",
      "6491  2012-12-31 22:00:00       1        0           1        1  10.66   \n",
      "6492  2012-12-31 23:00:00       1        0           1        1  10.66   \n",
      "\n",
      "       atemp  humidity  windspeed  \n",
      "6488  12.880        60    11.0014  \n",
      "6489  12.880        60    11.0014  \n",
      "6490  12.880        60    11.0014  \n",
      "6491  13.635        56     8.9981  \n",
      "6492  13.635        65     8.9981  \n",
      "\n",
      "DESCRIBE - Numerical\n",
      "            season      holiday   workingday      weather         temp  \\\n",
      "count  6493.000000  6493.000000  6493.000000  6493.000000  6493.000000   \n",
      "mean      2.493300     0.029108     0.685815     1.436778    20.620607   \n",
      "std       1.091258     0.168123     0.464226     0.648390     8.059583   \n",
      "min       1.000000     0.000000     0.000000     1.000000     0.820000   \n",
      "25%       2.000000     0.000000     0.000000     1.000000    13.940000   \n",
      "50%       3.000000     0.000000     1.000000     1.000000    21.320000   \n",
      "75%       3.000000     0.000000     1.000000     2.000000    27.060000   \n",
      "max       4.000000     1.000000     1.000000     4.000000    40.180000   \n",
      "\n",
      "             atemp     humidity    windspeed  \n",
      "count  6493.000000  6493.000000  6493.000000  \n",
      "mean     24.012865    64.125212    12.631157  \n",
      "std       8.782741    19.293391     8.250151  \n",
      "min       0.000000    16.000000     0.000000  \n",
      "25%      16.665000    49.000000     7.001500  \n",
      "50%      25.000000    65.000000    11.001400  \n",
      "75%      31.060000    81.000000    16.997900  \n",
      "max      50.000000   100.000000    55.998600  \n",
      "\n",
      "DESCRIBE - Categorical\n",
      "                   datetime\n",
      "count                  6493\n",
      "unique                 6493\n",
      "top     2011-01-20 00:00:00\n",
      "freq                      1\n",
      "\n",
      "UNIQUE ENTRIES IN EACH NUMERICAL COLUMN\n",
      "[('holiday', 2), ('workingday', 2), ('season', 4), ('weather', 4), ('windspeed', 27), ('temp', 49), ('atemp', 65), ('humidity', 79)]\n",
      "\n",
      "UNIQUE ENTRIES IN EACH CATEGORICAL COLUMN\n",
      "[('datetime', 6493)]\n"
     ]
    }
   ],
   "source": [
    "ds_info(test)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "008b3b2b",
   "metadata": {},
   "source": [
    "**Feature Engineering**\n",
    "\n",
    "_The datetime feature is type object, so it must be converted to type datetime. Also, some features such as season, holiday, weather and humidity are type int, but they are actually categorical data._"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "282de6b9",
   "metadata": {},
   "source": [
    "**Converting to categorical data**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "11ec96d6",
   "metadata": {},
   "outputs": [],
   "source": [
    "    \n",
    "# This Function is to parse date \n",
    "def parse_datetime(data):\n",
    "    #convert date.datetime to type datetime \n",
    "    data.datetime = pd.to_datetime(data.datetime)\n",
    "    # split in columns\n",
    "    data['year'] = data['datetime'].dt.year\n",
    "    data['month'] = data['datetime'].dt.month\n",
    "    data['day'] = data['datetime'].dt.day\n",
    "    data['hour'] = data['datetime'].dt.hour\n",
    "    data['weekday'] = data['datetime'].dt.weekday"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "3c123058",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Convertting ds to type datetime and split in columns\n",
    "parse_datetime(train)\n",
    "parse_datetime(test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "61d7949f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Train\n",
    "train[\"season\"] = train.season.map({1:\"Spring\", 2:\"Summer\", 3:\"Fall\", 4:\"Winter\" })\n",
    "train[\"weather\"] = train.weather.map({1:\"Clear\",\\\n",
    "                                        2:\"Cloudy\", \\\n",
    "                                        3:\"Light Snow/Rain\", \\\n",
    "                                        4:\"Heavy Rain/Snow\"})\n",
    "# Test\n",
    "test[\"season\"] = test.season.map({1:\"Spring\", 2:\"Summer\", 3:\"Fall\", 4:\"Winter\" })\n",
    "test[\"weather\"] = test.weather.map({1:\"Clear\",\\\n",
    "                                        2:\"Cloudy\", \\\n",
    "                                        3:\"Light Snow/Rain\", \\\n",
    "                                        4:\"Heavy Rain/Snow\"})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "ec55088d",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Train\n",
    "categoryVariableList = [\"hour\",\"weekday\",\"month\",\"season\",\"weather\",\"holiday\",\"workingday\"]\n",
    "for var in categoryVariableList:\n",
    "    train[var] = train[var].astype(\"category\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "08236c8e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Test\n",
    "for var in categoryVariableList:\n",
    "    test[var] = test[var].astype(\"category\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c21bfa0c",
   "metadata": {},
   "source": [
    "The column datetime is not neccessary anymore so I dropped."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "6ce4ab21",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Train\n",
    "x_date_test = test['datetime'].values #to be used to submit the model\n",
    "train = train.drop(['datetime'], axis=1)\n",
    "# Test\n",
    "test = test.drop(['datetime'], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "ff14063e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "season        0\n",
      "holiday       0\n",
      "workingday    0\n",
      "weather       0\n",
      "temp          0\n",
      "atemp         0\n",
      "humidity      0\n",
      "windspeed     0\n",
      "casual        0\n",
      "registered    0\n",
      "count         0\n",
      "year          0\n",
      "month         0\n",
      "day           0\n",
      "hour          0\n",
      "weekday       0\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(train.isnull().sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "7e69232a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "season        0\n",
      "holiday       0\n",
      "workingday    0\n",
      "weather       0\n",
      "temp          0\n",
      "atemp         0\n",
      "humidity      0\n",
      "windspeed     0\n",
      "year          0\n",
      "month         0\n",
      "day           0\n",
      "hour          0\n",
      "weekday       0\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(test.isnull().sum())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "48a01ba1",
   "metadata": {},
   "source": [
    "#### Analysing the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "3a6ef78c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(0.5, 0, 'Weather'),\n",
       " Text(0, 0.5, 'Count'),\n",
       " Text(0.5, 1.0, 'Count by Weather')]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x1440 with 6 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, axes = plt.subplots(nrows=3,ncols=2)\n",
    "fig.set_size_inches(15, 20)\n",
    "sns.boxplot(data=train,y=\"count\",orient=\"v\",ax=axes[0][0])\n",
    "sns.boxplot(data=train,y=\"count\",x=\"hour\",orient=\"v\",ax=axes[0][1])\n",
    "sns.boxplot(data=train,y=\"count\",x=\"season\",orient=\"v\",ax=axes[1][0])\n",
    "sns.boxplot(data=train,y=\"count\",x=\"workingday\",orient=\"v\",ax=axes[1][1])\n",
    "sns.boxplot(data=train,y=\"count\",x=\"holiday\",orient=\"v\",ax=axes[2][0])\n",
    "sns.boxplot(data=train,y=\"count\",x=\"weather\",orient=\"v\",ax=axes[2][1])\n",
    "\n",
    "axes[0][0].set(ylabel='Count',title=\"Count\")\n",
    "axes[0][1].set(xlabel='Hour Of The Day', ylabel='Count',title=\"Count by Hour of the Day\")\n",
    "axes[1][0].set(xlabel='Season', ylabel='Count',title=\"Count by Season\")\n",
    "axes[1][1].set(xlabel='Working Day', ylabel='Count',title=\"Count by Working Day\")\n",
    "axes[2][0].set(xlabel='Holiday', ylabel='Count',title=\"Count by Holiday\")\n",
    "axes[2][1].set(xlabel='Weather', ylabel='Count',title=\"Count by Weather\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "18f49ee1",
   "metadata": {},
   "source": [
    ">Description of columns and its features:\n",
    ">datetime - hourly date + timestamp\n",
    "season - season of the year (1 = spring, 2 = summer, 3 = fall, 4 = winter)\n",
    "holiday - whether the day is considered a holiday (1: holiday, 0: not a holiday)\n",
    "workingday - whether the day is neither a weekend nor holiday (1: working day, 0: not a working day)\n",
    "weather:\n",
    "1: Clear, Few clouds, Partly cloudy, Partly cloudy\n",
    "2: Mist + Cloudy, Mist + Broken clouds, Mist + Few clouds, Mist\n",
    "3: Light Snow, Light Rain + Thunderstorm + Scattered clouds, Light Rain + Scattered clouds\n",
    "4: Heavy Rain + Ice Pallets + Thunderstorm + Mist, Snow + Fog"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "df3061df",
   "metadata": {},
   "source": [
    ">Analysis:\n",
    ">The comparison between seasons show spring is the one with lower number of bike rent.\n",
    "The boxplot with meaninful information is the Hour of the day, because it shows the busiest hours are 7AM - 8AM and 5PM - 6PM, which means the users mainly rent the bikes to ride to work/school and to return back home at the end of the day.\n",
    "Based on boxplots 4 and 5 (Working Day and Holiday), we see most outliers are in working days. The result make sense when looking to Holiday, since all outliers are for non holidays days.\n",
    "The last boxploy demonstrates the obvious common sense that most users rent bikes when the weather is Clear and Cloudy (1 and 2), and almost no users when is heavy raining or snowing (3).\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c5512b0b",
   "metadata": {},
   "source": [
    ">Removing Outliers\n",
    ">It will be used the Three-sigma rule to remove the outliers, also known as the \"68-95-99.7 rule\". Tree-sigma is a statistical principle that states that for a normal distribution of data, approximately 68% of the data will fall within one standard deviation of the mean, about 95% will fall within two standard deviations, and about 99.7% will fall within three standard deviations.\n",
    ">In practice, this means that if we have a data point that falls outside of three standard deviations from the mean, it is considered an outlier and may be removed from the dataset. This approach assumes that the data follows a normal distribution and that outliers are rare events that are unlikely to occur in the future."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "4032906f",
   "metadata": {},
   "outputs": [],
   "source": [
    "    \n",
    "# This Function is to detect and print outliers \n",
    "def detect_outliers(data):\n",
    "    # mean, standard deviation and 3-sigma of the data\n",
    "    mean = np.mean(data)\n",
    "    std = np.std(data)\n",
    "    threesigma = 3 * std\n",
    "    \n",
    "    # printing upper, lower boundary and boxplot\n",
    "    sns.boxplot(data, orient=\"v\")\n",
    "    plt.show()\n",
    "    lower, upper = mean-3*std, mean+3*std\n",
    "    print(f\"Upper and lower boundary is: {lower}/{upper}\")\n",
    "    \n",
    "    # identifing outliers and returning the outliers\n",
    "    outliers = [x for x in data if np.abs(x - mean) > threesigma]\n",
    "    print(f\"There are {len(outliers)} outliers based on three-sigma rule\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "b3f37cbe",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\vasavi\\anaconda3\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n",
      "C:\\Users\\vasavi\\anaconda3\\lib\\site-packages\\seaborn\\_core.py:1326: UserWarning: Vertical orientation ignored with only `x` specified.\n",
      "  warnings.warn(single_var_warning.format(\"Vertical\", \"x\"))\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Upper and lower boundary is: -351.8342688102485/734.982532635345\n",
      "There are 147 outliers based on three-sigma rule\n"
     ]
    }
   ],
   "source": [
    "#copying of train data to compare\n",
    "train_with_outliers = train\n",
    "# Detecting the Outliers\n",
    "detect_outliers(train['count'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "29dd0215",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Ploting distribuition with outliers\n",
    "fig,axes = plt.subplots()\n",
    "fig.set_size_inches(10, 5)\n",
    "sns.histplot(train_with_outliers[\"count\"], kde=True)\n",
    "\n",
    "# Setting plot title and labels\n",
    "plt.title('Histogram of Train with Outliers')\n",
    "plt.xlabel('Count')\n",
    "plt.ylabel('Frequency')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "452e2b51",
   "metadata": {},
   "outputs": [],
   "source": [
    "# This Function is to delete the outliers \n",
    "def delete_outliers(data, df):\n",
    "    # detecting and dropping outliers \n",
    "    original_shape = df.shape\n",
    "    mean = np.mean(data)\n",
    "    std = np.std(data)\n",
    "    outliers = np.abs(data-mean) > (3*std)\n",
    "    outliers_num = len(train[outliers])\n",
    "    df.drop(index=data[outliers].index, inplace=True)\n",
    "    \n",
    "    # print what was deleted\n",
    "    print(\"Number of outliers deleted:\", outliers_num)\n",
    "    print (\"Shape of dataframe with Ouliers: \",original_shape)\n",
    "    print (\"Shape of Dataframe After Deleting the Ouliers: \",df.shape)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "021728e4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of outliers deleted: 147\n",
      "Shape of dataframe with Ouliers:  (10886, 16)\n",
      "Shape of Dataframe After Deleting the Ouliers:  (10739, 16)\n"
     ]
    }
   ],
   "source": [
    "# Dropping the outliers from train dataset\n",
    "delete_outliers(train['count'], train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "efebbda7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Ploting distribuition of train without outliers\n",
    "fig,axes = plt.subplots()\n",
    "fig.set_size_inches(10, 5)\n",
    "sns.histplot(np.log(train[\"count\"]), kde=True)\n",
    "\n",
    "# Setting plot title and labels\n",
    "plt.title('Histogram of Train without Outliers')\n",
    "plt.xlabel('Count')\n",
    "plt.ylabel('Frequency')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "2ed2363d",
   "metadata": {},
   "outputs": [],
   "source": [
    "#This Function is to plot the Correlation Heatmap\n",
    "def correlation_heatmap(corr):\n",
    "    mask = np.array(corr)\n",
    "    mask[np.tril_indices_from(mask)] = False\n",
    "    \n",
    "    # plotting the correlation\n",
    "    fig,ax= plt.subplots()\n",
    "    fig.set_size_inches(10,10)\n",
    "    sns.heatmap(corr, mask=mask,vmax=.8, square=True,annot=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "96a4b390",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "corr_variables = train[[\"temp\",\"atemp\",\"casual\",\"registered\",\"humidity\",\"windspeed\",\"count\"]].corr()\n",
    "correlation_heatmap(corr_variables)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dcfc1ac4",
   "metadata": {},
   "source": [
    ">Analysis:\n",
    ">In this analisys, it was correlated count with the variables temp, atemp, casual, registered, humidity, windspeed. These are main conclusions found:\n",
    ">The correlation between count and temp (and atemp) is low it seems to have little dependency on count\n",
    "Since count is the result of casual and registerd, we can see correlation of casual agains temp and registered agains temp, we see that registered users have a lower correlation with temperature than casual user, wich makes sense, since the casual users rent the bike for leasure purposes and probably only when the weather is pleasant.\n",
    "Temp and atemp have a strong correlation, which in this case could configure multicolinearity in the model, so one of them could be removed from the final model.\n",
    "Windspeed doesn't correlate well with any variables, and seems to contain 0 in the sample, which could be considered data missing or just the lack of wind.\n",
    "The last two graphs are only to demonstrate count is more affected by registered users, but cannot be used in the final model because would not be available at the time of making the predictions, and are also considered leakage variables."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c788b0c9",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
